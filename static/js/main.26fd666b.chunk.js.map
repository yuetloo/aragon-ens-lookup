{"version":3,"sources":["networks.js","components/Error.js","components/EnsAddress.js","apm/index.js","components/Versions.js","components/Details.js","components/EnsOwner.js","components/MetamaskNotInstalled.js","App.js","constants.js","reportWebVitals.js","index.js"],"names":["SUPPORTED_NETWORKS","Map","ensRegistry","name","type","Error","message","style","color","overflowWrap","display","EnsAddress","provider","domain","networkType","below","useViewport","useState","address","setAddress","error","setError","shortenAddress","useEffect","cancel","a","resolveName","domainAddress","console","log","getAddress","shorten","entity","repoAbi","Apm","this","Contract","getRepository","repository","getVersionsCount","versionCount","versionsPromises","i","push","getByVersionId","Promise","all","versions","map","semanticVersion","contractAddress","contentURI","utils","toUtf8String","split","location","version","join","content","toIpfsLink","cid","Versions","repo","network","setVersions","apm","getAllVersions","versionList","reverse","getVersions","length","Box","item","mode","label","href","styled","div","Details","apps","app","index","items","ensAbi","EnsOwner","owner","setOwner","getNetwork","ensAddress","ens","domainHash","namehash","domainOwner","getOwner","MetamaskNotInstalled","alignItems","justifyContent","height","alignSelf","illustration","width","src","alt","text","knownAddresses","values","addr","App","setProvider","setDomain","setNetwork","window","ethereum","handleChainChanged","chainId","reload","fetchNetwork","ethersProvider","providers","Web3Provider","ethersNetwork","supportedNetwork","get","on","removeListener","handleChange","useCallback","val","primary","secondary","wide","value","onChange","heading","filter","m","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26fd666b.chunk.js","sourcesContent":["export const SUPPORTED_NETWORKS = new Map([\n  [\n    1,\n    {\n      ensRegistry: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n      name: 'Ethereum Mainnet',\n      type: 'main',\n    },\n  ],\n  [\n    4,\n    {\n      ensRegistry: '0x98df287b6c145399aaa709692c8d308357bc085d',\n      name: 'Ethereum Rinkeby Testnet',\n      type: 'rinkeby',\n    },\n  ],\n  [\n    137,\n    {\n      ensRegistry: '0x3c70a0190d09f34519e6e218364451add21b7d4b',\n      name: 'Polygon Mainnet',\n      type: 'matic',\n    },\n  ],\n  [\n    80001,\n    {\n      ensRegistry: '0x431f0eed904590b176f9ff8c36a1c4ff0ee9b982',\n      name: 'Polygon Mumbai Testnet',\n      type: 'mumbai',\n    },\n  ],\n  [\n    421611,\n    {\n      ensRegistry: '0x206edd024d8ac4df5e8953619ea8355b91248af1',\n      name: 'Arbitrum Testnet',\n      type: 'rinkarby',\n    },\n  ],\n  [\n    1666700000,\n    {\n      ensRegistry: '0xbc7828fa8665c637901ad5abd5c7e647c9ab140f',\n      name: 'Harmony Testnet',\n      type: 'harmonyTest',\n    },\n  ],\n  [\n    1666600000,\n    {\n      ensRegistry: '0x843ddfab8406e752d03fa75dbb275070f368658d',\n      name: 'Harmony',\n      type: 'harmony',\n    },\n  ],\n  [\n    97,\n    {\n      ensRegistry: '0x843ddfab8406e752d03fa75dbb275070f368658d',\n      name: 'Bsc Testnet',\n      type: 'bscTest',\n    },\n  ],\n])\n","export function Error({ message }) {\n  return (\n    <div style={{ color: 'red', overflowWrap: 'anywhere', display: 'inline' }}>\n      {message}\n    </div>\n  )\n}\n","import { IdentityBadge, useViewport } from '@aragon/ui'\nimport { useState, useEffect } from 'react'\nimport { Error } from './Error'\n\nexport function EnsAddress({ provider, domain, networkType }) {\n  const { below } = useViewport()\n  const [address, setAddress] = useState('')\n  const [error, setError] = useState()\n\n  const shortenAddress = below('medium')\n\n  useEffect(() => {\n    let cancel = false\n    async function getAddress() {\n      try {\n        const domainAddress = await provider.resolveName(domain)\n        if (!cancel) setAddress(domainAddress)\n      } catch (err) {\n        console.log('error', err)\n        if (!cancel) setError(err.message)\n      }\n    }\n\n    getAddress()\n\n    return () => {\n      cancel = true\n    }\n  }, [provider, domain])\n\n  if (error) {\n    return <Error message={error} />\n  }\n\n  if (address) {\n    return (\n      <IdentityBadge\n        shorten={shortenAddress}\n        entity={address}\n        networkType={networkType}\n      />\n    )\n  }\n\n  return null\n}\n","import { Contract, utils } from 'ethers'\n\nconst repoAbi = [\n  'function getVersionsCount() public view returns (uint256)',\n  'function getByVersionId(uint _versionId) public view returns (uint16[3] semanticVersion, address contractAddress, bytes contentURI)',\n]\n\nexport class Apm {\n  constructor(provider) {\n    this.provider = provider\n  }\n\n  async getRepository(domain) {\n    const address = await this.provider.resolveName(domain)\n    return new Contract(address, repoAbi, this.provider)\n  }\n\n  async getAllVersions(domain) {\n    const repository = await this.getRepository(domain)\n    const versionCount = await repository.getVersionsCount()\n\n    const versionsPromises = []\n    for (let i = 1; i <= versionCount; i++) {\n      versionsPromises.push(repository.getByVersionId(i))\n    }\n    const versions = await Promise.all(versionsPromises)\n    return versions.map(({ semanticVersion, contractAddress, contentURI }) => {\n      const contentURIString = utils.toUtf8String(contentURI)\n      const [provider, location] = contentURIString.split(/:(.+)/)\n      return {\n        version: semanticVersion.join('.'),\n        contractAddress,\n        content: { provider, location },\n      }\n    })\n  }\n}\n","import { useState } from 'react'\nimport { Apm } from '../apm'\nimport { Tag, Link, IdentityBadge, Field } from '@aragon/ui'\nimport styled from 'styled-components'\n\nfunction toIpfsLink(cid) {\n  return `https://ipfs.io/ipfs/${cid}`\n}\n\nexport function Versions({ repo, provider, network }) {\n  const [versions, setVersions] = useState(null)\n\n  useState(() => {\n    let cancel = false\n\n    async function getVersions() {\n      const apm = new Apm(provider)\n      try {\n        const versionList = await apm.getAllVersions(repo.domain)\n\n        if (!cancel) setVersions(versionList.reverse())\n      } catch (err) {\n        console.log(`error getting versions for ${repo.domain}`, err)\n        if (!cancel) setVersions([])\n      }\n    }\n\n    getVersions()\n\n    return () => {\n      cancel = true\n    }\n  }, [repo, provider])\n\n  if (!versions) {\n    return null\n  }\n\n  if (versions.length === 0) {\n    return <Box>No versions</Box>\n  }\n\n  return (\n    <div>\n      {versions.map((item) => (\n        <Box key={item.version}>\n          <Tag mode=\"new\">{item.version}</Tag>\n          <Field label=\"Contract\">\n            <IdentityBadge\n              shorten={false}\n              entity={item.contractAddress}\n              networkType={network.type}\n            />\n          </Field>\n          <Field label=\"Content\">\n            <Link href={toIpfsLink(item.content.location)}>\n              {toIpfsLink(item.content.location)}\n            </Link>\n          </Field>\n        </Box>\n      ))}\n    </div>\n  )\n}\n\nconst Box = styled.div`\n  padding: 24px;\n`\n","import { Field } from '@aragon/ui'\nimport { Accordion } from '@aragon/ui'\nimport { EnsAddress } from './EnsAddress'\nimport { Versions } from './Versions'\n\nexport function Details({ apps, network, provider }) {\n  return (\n    <ol>\n      {apps.map((app, index) => {\n        return (\n          <li key={index}>\n            <Field label={app.name}>\n              <Accordion\n                items={[\n                  [\n                    <div>\n                      <div>{app.domain}</div>\n                      <EnsAddress\n                        provider={provider}\n                        domain={app.domain}\n                        networkType={network.type}\n                      />\n                    </div>,\n                    <Versions\n                      repo={app}\n                      network={network}\n                      provider={provider}\n                    />,\n                  ],\n                ]}\n              />\n            </Field>\n          </li>\n        )\n      })}\n    </ol>\n  )\n}\n","import { IdentityBadge, useViewport } from '@aragon/ui'\nimport { Contract, utils } from 'ethers'\nimport { useState, useEffect } from 'react'\n\nconst ensAbi = ['function owner(bytes32 node) external view returns (address)']\n\nexport function EnsOwner({ provider, domain, networkType }) {\n  const { below } = useViewport()\n  const [owner, setOwner] = useState(null)\n\n  useEffect(() => {\n    let cancel = false\n    async function getOwner() {\n      if (!domain || !networkType) {\n        setOwner(null)\n        return\n      }\n\n      try {\n        const network = await provider.getNetwork()\n        if (!network.ensAddress) {\n          if (!cancel) {\n            setOwner(null)\n          }\n          return\n        }\n\n        const ens = new Contract(network.ensAddress, ensAbi, provider)\n        const domainHash = utils.namehash(domain)\n        const domainOwner = await ens.owner(domainHash)\n        if (!cancel) setOwner(domainOwner)\n      } catch (err) {\n        if (!cancel) setOwner(null)\n      }\n    }\n\n    getOwner()\n\n    return () => {\n      cancel = true\n    }\n  }, [provider, domain, networkType])\n\n  if (!owner) {\n    return null\n  }\n\n  return (\n    <IdentityBadge\n      shorten={below('medium')}\n      entity={owner}\n      networkType={networkType}\n    />\n  )\n}\n","import { EmptyStateCard } from '@aragon/ui'\n\nexport function MetamaskNotInstalled() {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100vh',\n      }}\n    >\n      <div style={{ alignSelf: 'center' }}>\n        <EmptyStateCard\n          illustration={\n            <img\n              width=\"200px\"\n              src={`/aragon-ens-lookup/aragon-ui/48526b4ed811c6ff.png`}\n              alt=\"metamask not found\"\n            />\n          }\n          text=\"Opps! Metamask is not installed!\"\n        ></EmptyStateCard>\n      </div>\n    </div>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { Box, Header, Main, Field, SearchInput } from '@aragon/ui'\nimport { KNOWN_ADDRESSES } from './constants'\nimport { SUPPORTED_NETWORKS } from './networks'\nimport { providers } from 'ethers'\nimport { Details } from './components/Details'\nimport { EnsAddress } from './components/EnsAddress'\nimport { EnsOwner } from './components/EnsOwner'\nimport { MetamaskNotInstalled } from './components/MetamaskNotInstalled'\n\nconst knownAddresses = []\nfor (const addr of KNOWN_ADDRESSES.values()) {\n  knownAddresses.push(addr)\n}\n\nfunction App() {\n  const [provider, setProvider] = useState(null)\n  const [domain, setDomain] = useState('aragonpm.eth')\n  const [network, setNetwork] = useState({})\n\n  useEffect(() => {\n    if (window.ethereum) {\n      let cancel = false\n      function handleChainChanged(chainId) {\n        console.log('chainChanged', chainId)\n        window.location.reload()\n      }\n\n      async function fetchNetwork() {\n        const ethersProvider = new providers.Web3Provider(window.ethereum)\n        try {\n          const ethersNetwork = await ethersProvider.getNetwork()\n          if (!cancel) {\n            const { chainId } = ethersNetwork\n            const supportedNetwork = SUPPORTED_NETWORKS.get(chainId)\n            if (supportedNetwork) {\n              ethersNetwork.ensAddress = supportedNetwork.ensRegistry\n              ethersNetwork.name = supportedNetwork.name\n            } else {\n              console.log('unsupported network', ethersNetwork)\n            }\n            setProvider(\n              new providers.Web3Provider(window.ethereum, ethersNetwork)\n            )\n            setNetwork(supportedNetwork || {})\n          }\n        } catch (err) {}\n      }\n\n      window.ethereum.on('chainChanged', handleChainChanged)\n      fetchNetwork()\n\n      return () => {\n        cancel = true\n        if (window.ethereum.removeListener) {\n          window.ethereum.removeListener('chainChanged', handleChainChanged)\n        }\n      }\n    }\n  }, [])\n\n  const handleChange = useCallback((val) => {\n    setDomain(val)\n  }, [])\n\n  if (!provider) {\n    return <MetamaskNotInstalled />\n  }\n\n  return (\n    <Main>\n      <Header\n        primary=\"Aragon ENS\"\n        secondary={network.name || 'Unsupported network'}\n      />\n      <Box>\n        <Field label=\"Lookup ENS name\">\n          <SearchInput wide value={domain} onChange={handleChange} />\n        </Field>\n\n        <div>\n          <Field label=\"address\">\n            <EnsAddress\n              provider={provider}\n              domain={domain}\n              networkType={network.type}\n            />\n          </Field>\n          <Field label=\"owner\">\n            <EnsOwner\n              provider={provider}\n              domain={domain}\n              networkType={network.type}\n            />\n          </Field>\n        </div>\n      </Box>\n      <Box heading=\"Known Apps:\">\n        <Details\n          apps={knownAddresses.filter((m) => m.type === 'app')}\n          network={network}\n          provider={provider}\n        />\n      </Box>\n      <Box heading=\"Known Templates:\">\n        <Details\n          apps={knownAddresses.filter((m) => m.type === 'template')}\n          network={network}\n          provider={provider}\n        />\n      </Box>\n    </Main>\n  )\n}\n\nexport default App\n","export const KNOWN_ADDRESSES = [\n  { name: 'Agent', domain: 'agent.aragonpm.eth', type: 'app' },\n  { name: 'Finance', domain: 'finance.aragonpm.eth', type: 'app' },\n  { name: 'Survey', domain: 'survey.aragonpm.eth', type: 'app' },\n  { name: 'Token Manager', domain: 'token-manager.aragonpm.eth', type: 'app' },\n  { name: 'Vault', domain: 'vault.aragonpm.eth', type: 'app' },\n  { name: 'Voting', domain: 'voting.aragonpm.eth', type: 'app' },\n\n  {\n    domain: 'dandelion-voting.aragonpm.eth',\n    name: 'Dandelion Voting',\n    type: 'app',\n  },\n  { domain: 'time-lock.aragonpm.eth', name: 'Time Lock', type: 'app' },\n  {\n    domain: 'token-balance-oracle.aragonpm.eth',\n    name: 'Token Balance Oracle',\n    type: 'app',\n  },\n  { domain: 'token-request.aragonpm.eth', name: 'Token Request', type: 'app' },\n\n  { domain: 'redemptions.aragonpm.eth', name: 'Redemptions', type: 'app' },\n  { domain: 'address-book.aragonpm.eth', name: 'Address Book', type: 'app' },\n  { domain: 'allocations.aragonpm.eth', name: 'Allocations', type: 'app' },\n  { domain: 'discussions.aragonpm.eth', name: 'Discussions', type: 'app' },\n  { domain: 'dot-voting.aragonpm.eth', name: 'Dot Voting', type: 'app' },\n  { domain: 'projects.aragonpm.eth', name: 'Projects', type: 'app' },\n  { domain: 'rewards.aragonpm.eth', name: 'Rewards', type: 'app' },\n  { domain: 'standard-bounties.aragonpm.eth', name: 'Bounties', type: 'app' },\n  {\n    domain: 'minime-factory.aragonpm.eth',\n    name: 'Minime Token Factory',\n    type: 'app',\n  },\n\n  {\n    name: 'Company',\n    domain: 'company-template.aragonpm.eth',\n    type: 'template',\n  },\n  {\n    name: 'Membership',\n    domain: 'membership-template.aragonpm.eth',\n    type: 'template',\n  },\n  {\n    name: 'Reputation',\n    domain: 'reputation-template.aragonpm.eth',\n    type: 'template',\n  },\n  {\n    name: 'Dandelion',\n    domain: 'dandelion-org-template.aragonpm.eth',\n    type: 'template',\n  },\n  {\n    name: 'Open Enterprise',\n    domain: 'open-enterprise-template.aragonpm.eth',\n    type: 'template',\n  },\n  {\n    name: 'Fundraising',\n    domain: 'aragon-fundraising.aragonpm.eth',\n    type: 'template',\n  },\n]\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}